class Solution {
public:
    //RECURSION + MEMOIZATION
    int helper(int m,int n,int i,int j,int** a){
        if(i==m-1 and j==n-1){
            return 1;
        }
        if(i>=m or j>=n){
            return 0;
        }
        if(a[i][j]!=-1){
            return a[i][j];
        }
        int ans = helper(m,n,i+1,j,a)+helper(m,n,i,j+1,a);
        a[i][j] = ans;
        return ans;
    }


    int uniquePaths(int m, int n) {
        int** a = new int*[m];
        for(int i=0;i<m;i++){
            a[i] = new int[n];
            for(int j=0;j<n;j++){
                a[i][j] = -1;
            }
        }
        return helper(m,n,0,0,a);
    }
};
