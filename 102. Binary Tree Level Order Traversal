/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL){
            return ans;
        }
        queue<TreeNode*>p;
        p.push(root);
        while(!p.empty()){
            vector<int>temp;
            int s = p.size();
            for(int i=0;i<s;i++){
                TreeNode* front = p.front();
                p.pop();
                if(front->left!=NULL){
                    p.push(front->left);
                }
                if(front->right!=NULL){
                    p.push(front->right);
                }
                temp.push_back(front->val);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
