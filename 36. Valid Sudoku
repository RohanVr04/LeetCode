class Solution {
public:

    bool valid(vector<vector<char>>& board,int i,int j,int val){
        //ROW AND COLUMN CHECK
        for(int k=0;k<9;k++){
            if(board[k][j]==val or board[i][k]==val){
                return false;
            }
        }
         //SUBGRID CHECK
        int sx = (i/3)*3;
        int sy = (j/3)*3;
        for(int x=sx;x<sx+3;x++){
            for(int y=sy;y<sy+3;y++){
                if(board[x][y]==val){
                    return false;
                }
            }
        }
        return true;
    }


    bool isValidSudoku(vector<vector<char>>& board) {
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.'){
                    continue;
                }
                else{
                    char value = board[i][j];
                    board[i][j] = '.';
                    bool check = valid(board,i,j,value);
                    if(check){
                        board[i][j] = value;
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        return true;
    }
};
