/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool helper(TreeNode* leftnode, TreeNode* rightnode){
        if(leftnode==NULL and rightnode==NULL){
            return true;
        }
        if(leftnode==NULL or rightnode==NULL){
            return false;
        }
        bool  ans = (leftnode->val==rightnode->val and helper(leftnode->left,rightnode->right) 
        and helper(leftnode->right,rightnode->left));
        
        return ans;

    }

    bool isSymmetric(TreeNode* root) {
        if(root==NULL){
            return true;
        }
        return helper(root->left,root->right);
    }
};
