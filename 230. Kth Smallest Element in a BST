/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,priority_queue<int,vector<int>,greater<int>>&p){
        if(root==NULL){
            return;
        }

        p.push(root->val);
        if(root->left!=NULL){
            helper(root->left,p);
        }
        if(root->right!=NULL){
            helper(root->right,p);
        }

    }

    int kthSmallest(TreeNode* root, int k) {
        priority_queue<int,vector<int>,greater<int>>p;
        helper(root,p);
        for(int i=0;i<k-1;i++){
            p.pop();
        }
        return p.top();
    }
};
